import torch
import pickle

# 修改为你的pkl文件路径
pkl_path = 'Physformer_VIPL_fold1.pkl'

# 尝试用torch或pickle加载
try:
    data = torch.load(pkl_path, map_location='cpu')
    print('torch.load 成功')
except Exception as e:
    print('torch.load 失败，尝试用pickle加载:', e)
    with open(pkl_path, 'rb') as f:
        data = pickle.load(f)
        print('pickle.load 成功')

# 分析内容类型和形状
if isinstance(data, dict):
    print('内容为 dict，包含以下 keys:')
    for k, v in data.items():
        if hasattr(v, 'shape'):
            print(f'  {k}: shape={v.shape}')
        elif isinstance(v, dict):
            print(f'  {k}: dict, keys={list(v.keys())}')
        else:
            print(f'  {k}: type={type(v)}')
else:
    print('内容类型:', type(data))
    if hasattr(data, 'shape'):
        print('shape:', data.shape)
    elif isinstance(data, list):
        print('list 长度:', len(data))
    else:
        print('内容预览:', str(data)[:200])


"""
(dmm_pytorch) PS C:\Users\LMAPA\Documents\GitHub\vision-black-tech\PhysFormer> python .\analyze_pkl_shape.py      
torch.load 成功                                                                                                   
内容为 dict，包含以下 keys:
  patch_embedding.weight: shape=torch.Size([96, 96, 4, 4, 4])
  patch_embedding.bias: shape=torch.Size([96])
  transformer1.blocks.0.attn.proj_q.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer1.blocks.0.attn.proj_q.1.weight: shape=torch.Size([96])
  transformer1.blocks.0.attn.proj_q.1.bias: shape=torch.Size([96])
  transformer1.blocks.0.attn.proj_q.1.running_mean: shape=torch.Size([96])
  transformer1.blocks.0.attn.proj_q.1.running_var: shape=torch.Size([96])
  transformer1.blocks.0.attn.proj_q.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.0.attn.proj_k.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer1.blocks.0.attn.proj_k.1.weight: shape=torch.Size([96])
  transformer1.blocks.0.attn.proj_k.1.bias: shape=torch.Size([96])
  transformer1.blocks.0.attn.proj_k.1.running_mean: shape=torch.Size([96])
  transformer1.blocks.0.attn.proj_k.1.running_var: shape=torch.Size([96])
  transformer1.blocks.0.attn.proj_k.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.0.attn.proj_v.0.weight: shape=torch.Size([96, 96, 1, 1, 1])
  transformer1.blocks.0.proj.weight: shape=torch.Size([96, 96])
  transformer1.blocks.0.proj.bias: shape=torch.Size([96])
  transformer1.blocks.0.norm1.weight: shape=torch.Size([96])
  transformer1.blocks.0.norm1.bias: shape=torch.Size([96])
  transformer1.blocks.0.pwff.fc1.0.weight: shape=torch.Size([144, 96, 1, 1, 1])
  transformer1.blocks.0.pwff.fc1.1.weight: shape=torch.Size([144])
  transformer1.blocks.0.pwff.fc1.1.bias: shape=torch.Size([144])
  transformer1.blocks.0.pwff.fc1.1.running_mean: shape=torch.Size([144])
  transformer1.blocks.0.pwff.fc1.1.running_var: shape=torch.Size([144])
  transformer1.blocks.0.pwff.fc1.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.0.pwff.STConv.0.weight: shape=torch.Size([144, 1, 3, 3, 3])
  transformer1.blocks.0.pwff.STConv.1.weight: shape=torch.Size([144])
  transformer1.blocks.0.pwff.STConv.1.bias: shape=torch.Size([144])
  transformer1.blocks.0.pwff.STConv.1.running_mean: shape=torch.Size([144])
  transformer1.blocks.0.pwff.STConv.1.running_var: shape=torch.Size([144])
  transformer1.blocks.0.pwff.STConv.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.0.pwff.fc2.0.weight: shape=torch.Size([96, 144, 1, 1, 1])
  transformer1.blocks.0.pwff.fc2.1.weight: shape=torch.Size([96])
  transformer1.blocks.0.pwff.fc2.1.bias: shape=torch.Size([96])
  transformer1.blocks.0.pwff.fc2.1.running_mean: shape=torch.Size([96])
  transformer1.blocks.0.pwff.fc2.1.running_var: shape=torch.Size([96])
  transformer1.blocks.0.pwff.fc2.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.0.norm2.weight: shape=torch.Size([96])
  transformer1.blocks.0.norm2.bias: shape=torch.Size([96])
  transformer1.blocks.1.attn.proj_q.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer1.blocks.1.attn.proj_q.1.weight: shape=torch.Size([96])
  transformer1.blocks.1.attn.proj_q.1.bias: shape=torch.Size([96])
  transformer1.blocks.1.attn.proj_q.1.running_mean: shape=torch.Size([96])
  transformer1.blocks.1.attn.proj_q.1.running_var: shape=torch.Size([96])
  transformer1.blocks.1.attn.proj_q.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.1.attn.proj_k.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer1.blocks.1.attn.proj_k.1.weight: shape=torch.Size([96])
  transformer1.blocks.1.attn.proj_k.1.bias: shape=torch.Size([96])
  transformer1.blocks.1.attn.proj_k.1.running_mean: shape=torch.Size([96])
  transformer1.blocks.1.attn.proj_k.1.running_var: shape=torch.Size([96])
  transformer1.blocks.1.attn.proj_k.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.1.attn.proj_v.0.weight: shape=torch.Size([96, 96, 1, 1, 1])
  transformer1.blocks.1.proj.weight: shape=torch.Size([96, 96])
  transformer1.blocks.1.proj.bias: shape=torch.Size([96])
  transformer1.blocks.1.norm1.weight: shape=torch.Size([96])
  transformer1.blocks.1.norm1.bias: shape=torch.Size([96])
  transformer1.blocks.1.pwff.fc1.0.weight: shape=torch.Size([144, 96, 1, 1, 1])
  transformer1.blocks.1.pwff.fc1.1.weight: shape=torch.Size([144])
  transformer1.blocks.1.pwff.fc1.1.bias: shape=torch.Size([144])
  transformer1.blocks.1.pwff.fc1.1.running_mean: shape=torch.Size([144])
  transformer1.blocks.1.pwff.fc1.1.running_var: shape=torch.Size([144])
  transformer1.blocks.1.pwff.fc1.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.1.pwff.STConv.0.weight: shape=torch.Size([144, 1, 3, 3, 3])
  transformer1.blocks.1.pwff.STConv.1.weight: shape=torch.Size([144])
  transformer1.blocks.1.pwff.STConv.1.bias: shape=torch.Size([144])
  transformer1.blocks.1.pwff.STConv.1.running_mean: shape=torch.Size([144])
  transformer1.blocks.1.pwff.STConv.1.running_var: shape=torch.Size([144])
  transformer1.blocks.1.pwff.STConv.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.1.pwff.fc2.0.weight: shape=torch.Size([96, 144, 1, 1, 1])
  transformer1.blocks.1.pwff.fc2.1.weight: shape=torch.Size([96])
  transformer1.blocks.1.pwff.fc2.1.bias: shape=torch.Size([96])
  transformer1.blocks.1.pwff.fc2.1.running_mean: shape=torch.Size([96])
  transformer1.blocks.1.pwff.fc2.1.running_var: shape=torch.Size([96])
  transformer1.blocks.1.pwff.fc2.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.1.norm2.weight: shape=torch.Size([96])
  transformer1.blocks.1.norm2.bias: shape=torch.Size([96])
  transformer1.blocks.2.attn.proj_q.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer1.blocks.2.attn.proj_q.1.weight: shape=torch.Size([96])
  transformer1.blocks.2.attn.proj_q.1.bias: shape=torch.Size([96])
  transformer1.blocks.2.attn.proj_q.1.running_mean: shape=torch.Size([96])
  transformer1.blocks.2.attn.proj_q.1.running_var: shape=torch.Size([96])
  transformer1.blocks.2.attn.proj_q.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.2.attn.proj_k.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer1.blocks.2.attn.proj_k.1.weight: shape=torch.Size([96])
  transformer1.blocks.2.attn.proj_k.1.bias: shape=torch.Size([96])
  transformer1.blocks.2.attn.proj_k.1.running_mean: shape=torch.Size([96])
  transformer1.blocks.2.attn.proj_k.1.running_var: shape=torch.Size([96])
  transformer1.blocks.2.attn.proj_k.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.2.attn.proj_v.0.weight: shape=torch.Size([96, 96, 1, 1, 1])
  transformer1.blocks.2.proj.weight: shape=torch.Size([96, 96])
  transformer1.blocks.2.proj.bias: shape=torch.Size([96])
  transformer1.blocks.2.norm1.weight: shape=torch.Size([96])
  transformer1.blocks.2.norm1.bias: shape=torch.Size([96])
  transformer1.blocks.2.pwff.fc1.0.weight: shape=torch.Size([144, 96, 1, 1, 1])
  transformer1.blocks.2.pwff.fc1.1.weight: shape=torch.Size([144])
  transformer1.blocks.2.pwff.fc1.1.bias: shape=torch.Size([144])
  transformer1.blocks.2.pwff.fc1.1.running_mean: shape=torch.Size([144])
  transformer1.blocks.2.pwff.fc1.1.running_var: shape=torch.Size([144])
  transformer1.blocks.2.pwff.fc1.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.2.pwff.STConv.0.weight: shape=torch.Size([144, 1, 3, 3, 3])
  transformer1.blocks.2.pwff.STConv.1.weight: shape=torch.Size([144])
  transformer1.blocks.2.pwff.STConv.1.bias: shape=torch.Size([144])
  transformer1.blocks.2.pwff.STConv.1.running_mean: shape=torch.Size([144])
  transformer1.blocks.2.pwff.STConv.1.running_var: shape=torch.Size([144])
  transformer1.blocks.2.pwff.STConv.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.2.pwff.fc2.0.weight: shape=torch.Size([96, 144, 1, 1, 1])
  transformer1.blocks.2.pwff.fc2.1.weight: shape=torch.Size([96])
  transformer1.blocks.2.pwff.fc2.1.bias: shape=torch.Size([96])
  transformer1.blocks.2.pwff.fc2.1.running_mean: shape=torch.Size([96])
  transformer1.blocks.2.pwff.fc2.1.running_var: shape=torch.Size([96])
  transformer1.blocks.2.pwff.fc2.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.2.norm2.weight: shape=torch.Size([96])
  transformer1.blocks.2.norm2.bias: shape=torch.Size([96])
  transformer1.blocks.3.attn.proj_q.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer1.blocks.3.attn.proj_q.1.weight: shape=torch.Size([96])
  transformer1.blocks.3.attn.proj_q.1.bias: shape=torch.Size([96])
  transformer1.blocks.3.attn.proj_q.1.running_mean: shape=torch.Size([96])
  transformer1.blocks.3.attn.proj_q.1.running_var: shape=torch.Size([96])
  transformer1.blocks.3.attn.proj_q.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.3.attn.proj_k.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer1.blocks.3.attn.proj_k.1.weight: shape=torch.Size([96])
  transformer1.blocks.3.attn.proj_k.1.bias: shape=torch.Size([96])
  transformer1.blocks.3.attn.proj_k.1.running_mean: shape=torch.Size([96])
  transformer1.blocks.3.attn.proj_k.1.running_var: shape=torch.Size([96])
  transformer1.blocks.3.attn.proj_k.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.3.attn.proj_v.0.weight: shape=torch.Size([96, 96, 1, 1, 1])
  transformer1.blocks.3.proj.weight: shape=torch.Size([96, 96])
  transformer1.blocks.3.proj.bias: shape=torch.Size([96])
  transformer1.blocks.3.norm1.weight: shape=torch.Size([96])
  transformer1.blocks.3.norm1.bias: shape=torch.Size([96])
  transformer1.blocks.3.pwff.fc1.0.weight: shape=torch.Size([144, 96, 1, 1, 1])
  transformer1.blocks.3.pwff.fc1.1.weight: shape=torch.Size([144])
  transformer1.blocks.3.pwff.fc1.1.bias: shape=torch.Size([144])
  transformer1.blocks.3.pwff.fc1.1.running_mean: shape=torch.Size([144])
  transformer1.blocks.3.pwff.fc1.1.running_var: shape=torch.Size([144])
  transformer1.blocks.3.pwff.fc1.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.3.pwff.STConv.0.weight: shape=torch.Size([144, 1, 3, 3, 3])
  transformer1.blocks.3.pwff.STConv.1.weight: shape=torch.Size([144])
  transformer1.blocks.3.pwff.STConv.1.bias: shape=torch.Size([144])
  transformer1.blocks.3.pwff.STConv.1.running_mean: shape=torch.Size([144])
  transformer1.blocks.3.pwff.STConv.1.running_var: shape=torch.Size([144])
  transformer1.blocks.3.pwff.STConv.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.3.pwff.fc2.0.weight: shape=torch.Size([96, 144, 1, 1, 1])
  transformer1.blocks.3.pwff.fc2.1.weight: shape=torch.Size([96])
  transformer1.blocks.3.pwff.fc2.1.bias: shape=torch.Size([96])
  transformer1.blocks.3.pwff.fc2.1.running_mean: shape=torch.Size([96])
  transformer1.blocks.3.pwff.fc2.1.running_var: shape=torch.Size([96])
  transformer1.blocks.3.pwff.fc2.1.num_batches_tracked: shape=torch.Size([])
  transformer1.blocks.3.norm2.weight: shape=torch.Size([96])
  transformer1.blocks.3.norm2.bias: shape=torch.Size([96])
  transformer2.blocks.0.attn.proj_q.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer2.blocks.0.attn.proj_q.1.weight: shape=torch.Size([96])
  transformer2.blocks.0.attn.proj_q.1.bias: shape=torch.Size([96])
  transformer2.blocks.0.attn.proj_q.1.running_mean: shape=torch.Size([96])
  transformer2.blocks.0.attn.proj_q.1.running_var: shape=torch.Size([96])
  transformer2.blocks.0.attn.proj_q.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.0.attn.proj_k.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer2.blocks.0.attn.proj_k.1.weight: shape=torch.Size([96])
  transformer2.blocks.0.attn.proj_k.1.bias: shape=torch.Size([96])
  transformer2.blocks.0.attn.proj_k.1.running_mean: shape=torch.Size([96])
  transformer2.blocks.0.attn.proj_k.1.running_var: shape=torch.Size([96])
  transformer2.blocks.0.attn.proj_k.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.0.attn.proj_v.0.weight: shape=torch.Size([96, 96, 1, 1, 1])
  transformer2.blocks.0.proj.weight: shape=torch.Size([96, 96])
  transformer2.blocks.0.proj.bias: shape=torch.Size([96])
  transformer2.blocks.0.norm1.weight: shape=torch.Size([96])
  transformer2.blocks.0.norm1.bias: shape=torch.Size([96])
  transformer2.blocks.0.pwff.fc1.0.weight: shape=torch.Size([144, 96, 1, 1, 1])
  transformer2.blocks.0.pwff.fc1.1.weight: shape=torch.Size([144])
  transformer2.blocks.0.pwff.fc1.1.bias: shape=torch.Size([144])
  transformer2.blocks.0.pwff.fc1.1.running_mean: shape=torch.Size([144])
  transformer2.blocks.0.pwff.fc1.1.running_var: shape=torch.Size([144])
  transformer2.blocks.0.pwff.fc1.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.0.pwff.STConv.0.weight: shape=torch.Size([144, 1, 3, 3, 3])
  transformer2.blocks.0.pwff.STConv.1.weight: shape=torch.Size([144])
  transformer2.blocks.0.pwff.STConv.1.bias: shape=torch.Size([144])
  transformer2.blocks.0.pwff.STConv.1.running_mean: shape=torch.Size([144])
  transformer2.blocks.0.pwff.STConv.1.running_var: shape=torch.Size([144])
  transformer2.blocks.0.pwff.STConv.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.0.pwff.fc2.0.weight: shape=torch.Size([96, 144, 1, 1, 1])
  transformer2.blocks.0.pwff.fc2.1.weight: shape=torch.Size([96])
  transformer2.blocks.0.pwff.fc2.1.bias: shape=torch.Size([96])
  transformer2.blocks.0.pwff.fc2.1.running_mean: shape=torch.Size([96])
  transformer2.blocks.0.pwff.fc2.1.running_var: shape=torch.Size([96])
  transformer2.blocks.0.pwff.fc2.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.0.norm2.weight: shape=torch.Size([96])
  transformer2.blocks.0.norm2.bias: shape=torch.Size([96])
  transformer2.blocks.1.attn.proj_q.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer2.blocks.1.attn.proj_q.1.weight: shape=torch.Size([96])
  transformer2.blocks.1.attn.proj_q.1.bias: shape=torch.Size([96])
  transformer2.blocks.1.attn.proj_q.1.running_mean: shape=torch.Size([96])
  transformer2.blocks.1.attn.proj_q.1.running_var: shape=torch.Size([96])
  transformer2.blocks.1.attn.proj_q.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.1.attn.proj_k.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer2.blocks.1.attn.proj_k.1.weight: shape=torch.Size([96])
  transformer2.blocks.1.attn.proj_k.1.bias: shape=torch.Size([96])
  transformer2.blocks.1.attn.proj_k.1.running_mean: shape=torch.Size([96])
  transformer2.blocks.1.attn.proj_k.1.running_var: shape=torch.Size([96])
  transformer2.blocks.1.attn.proj_k.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.1.attn.proj_v.0.weight: shape=torch.Size([96, 96, 1, 1, 1])
  transformer2.blocks.1.proj.weight: shape=torch.Size([96, 96])
  transformer2.blocks.1.proj.bias: shape=torch.Size([96])
  transformer2.blocks.1.norm1.weight: shape=torch.Size([96])
  transformer2.blocks.1.norm1.bias: shape=torch.Size([96])
  transformer2.blocks.1.pwff.fc1.0.weight: shape=torch.Size([144, 96, 1, 1, 1])
  transformer2.blocks.1.pwff.fc1.1.weight: shape=torch.Size([144])
  transformer2.blocks.1.pwff.fc1.1.bias: shape=torch.Size([144])
  transformer2.blocks.1.pwff.fc1.1.running_mean: shape=torch.Size([144])
  transformer2.blocks.1.pwff.fc1.1.running_var: shape=torch.Size([144])
  transformer2.blocks.1.pwff.fc1.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.1.pwff.STConv.0.weight: shape=torch.Size([144, 1, 3, 3, 3])
  transformer2.blocks.1.pwff.STConv.1.weight: shape=torch.Size([144])
  transformer2.blocks.1.pwff.STConv.1.bias: shape=torch.Size([144])
  transformer2.blocks.1.pwff.STConv.1.running_mean: shape=torch.Size([144])
  transformer2.blocks.1.pwff.STConv.1.running_var: shape=torch.Size([144])
  transformer2.blocks.1.pwff.STConv.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.1.pwff.fc2.0.weight: shape=torch.Size([96, 144, 1, 1, 1])
  transformer2.blocks.1.pwff.fc2.1.weight: shape=torch.Size([96])
  transformer2.blocks.1.pwff.fc2.1.bias: shape=torch.Size([96])
  transformer2.blocks.1.pwff.fc2.1.running_mean: shape=torch.Size([96])
  transformer2.blocks.1.pwff.fc2.1.running_var: shape=torch.Size([96])
  transformer2.blocks.1.pwff.fc2.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.1.norm2.weight: shape=torch.Size([96])
  transformer2.blocks.1.norm2.bias: shape=torch.Size([96])
  transformer2.blocks.2.attn.proj_q.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer2.blocks.2.attn.proj_q.1.weight: shape=torch.Size([96])
  transformer2.blocks.2.attn.proj_q.1.bias: shape=torch.Size([96])
  transformer2.blocks.2.attn.proj_q.1.running_mean: shape=torch.Size([96])
  transformer2.blocks.2.attn.proj_q.1.running_var: shape=torch.Size([96])
  transformer2.blocks.2.attn.proj_q.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.2.attn.proj_k.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer2.blocks.2.attn.proj_k.1.weight: shape=torch.Size([96])
  transformer2.blocks.2.attn.proj_k.1.bias: shape=torch.Size([96])
  transformer2.blocks.2.attn.proj_k.1.running_mean: shape=torch.Size([96])
  transformer2.blocks.2.attn.proj_k.1.running_var: shape=torch.Size([96])
  transformer2.blocks.2.attn.proj_k.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.2.attn.proj_v.0.weight: shape=torch.Size([96, 96, 1, 1, 1])
  transformer2.blocks.2.proj.weight: shape=torch.Size([96, 96])
  transformer2.blocks.2.proj.bias: shape=torch.Size([96])
  transformer2.blocks.2.norm1.weight: shape=torch.Size([96])
  transformer2.blocks.2.norm1.bias: shape=torch.Size([96])
  transformer2.blocks.2.pwff.fc1.0.weight: shape=torch.Size([144, 96, 1, 1, 1])
  transformer2.blocks.2.pwff.fc1.1.weight: shape=torch.Size([144])
  transformer2.blocks.2.pwff.fc1.1.bias: shape=torch.Size([144])
  transformer2.blocks.2.pwff.fc1.1.running_mean: shape=torch.Size([144])
  transformer2.blocks.2.pwff.fc1.1.running_var: shape=torch.Size([144])
  transformer2.blocks.2.pwff.fc1.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.2.pwff.STConv.0.weight: shape=torch.Size([144, 1, 3, 3, 3])
  transformer2.blocks.2.pwff.STConv.1.weight: shape=torch.Size([144])
  transformer2.blocks.2.pwff.STConv.1.bias: shape=torch.Size([144])
  transformer2.blocks.2.pwff.STConv.1.running_mean: shape=torch.Size([144])
  transformer2.blocks.2.pwff.STConv.1.running_var: shape=torch.Size([144])
  transformer2.blocks.2.pwff.STConv.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.2.pwff.fc2.0.weight: shape=torch.Size([96, 144, 1, 1, 1])
  transformer2.blocks.2.pwff.fc2.1.weight: shape=torch.Size([96])
  transformer2.blocks.2.pwff.fc2.1.bias: shape=torch.Size([96])
  transformer2.blocks.2.pwff.fc2.1.running_mean: shape=torch.Size([96])
  transformer2.blocks.2.pwff.fc2.1.running_var: shape=torch.Size([96])
  transformer2.blocks.2.pwff.fc2.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.2.norm2.weight: shape=torch.Size([96])
  transformer2.blocks.2.norm2.bias: shape=torch.Size([96])
  transformer2.blocks.3.attn.proj_q.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer2.blocks.3.attn.proj_q.1.weight: shape=torch.Size([96])
  transformer2.blocks.3.attn.proj_q.1.bias: shape=torch.Size([96])
  transformer2.blocks.3.attn.proj_q.1.running_mean: shape=torch.Size([96])
  transformer2.blocks.3.attn.proj_q.1.running_var: shape=torch.Size([96])
  transformer2.blocks.3.attn.proj_q.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.3.attn.proj_k.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer2.blocks.3.attn.proj_k.1.weight: shape=torch.Size([96])
  transformer2.blocks.3.attn.proj_k.1.bias: shape=torch.Size([96])
  transformer2.blocks.3.attn.proj_k.1.running_mean: shape=torch.Size([96])
  transformer2.blocks.3.attn.proj_k.1.running_var: shape=torch.Size([96])
  transformer2.blocks.3.attn.proj_k.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.3.attn.proj_v.0.weight: shape=torch.Size([96, 96, 1, 1, 1])
  transformer2.blocks.3.proj.weight: shape=torch.Size([96, 96])
  transformer2.blocks.3.proj.bias: shape=torch.Size([96])
  transformer2.blocks.3.norm1.weight: shape=torch.Size([96])
  transformer2.blocks.3.norm1.bias: shape=torch.Size([96])
  transformer2.blocks.3.pwff.fc1.0.weight: shape=torch.Size([144, 96, 1, 1, 1])
  transformer2.blocks.3.pwff.fc1.1.weight: shape=torch.Size([144])
  transformer2.blocks.3.pwff.fc1.1.bias: shape=torch.Size([144])
  transformer2.blocks.3.pwff.fc1.1.running_mean: shape=torch.Size([144])
  transformer2.blocks.3.pwff.fc1.1.running_var: shape=torch.Size([144])
  transformer2.blocks.3.pwff.fc1.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.3.pwff.STConv.0.weight: shape=torch.Size([144, 1, 3, 3, 3])
  transformer2.blocks.3.pwff.STConv.1.weight: shape=torch.Size([144])
  transformer2.blocks.3.pwff.STConv.1.bias: shape=torch.Size([144])
  transformer2.blocks.3.pwff.STConv.1.running_mean: shape=torch.Size([144])
  transformer2.blocks.3.pwff.STConv.1.running_var: shape=torch.Size([144])
  transformer2.blocks.3.pwff.STConv.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.3.pwff.fc2.0.weight: shape=torch.Size([96, 144, 1, 1, 1])
  transformer2.blocks.3.pwff.fc2.1.weight: shape=torch.Size([96])
  transformer2.blocks.3.pwff.fc2.1.bias: shape=torch.Size([96])
  transformer2.blocks.3.pwff.fc2.1.running_mean: shape=torch.Size([96])
  transformer2.blocks.3.pwff.fc2.1.running_var: shape=torch.Size([96])
  transformer2.blocks.3.pwff.fc2.1.num_batches_tracked: shape=torch.Size([])
  transformer2.blocks.3.norm2.weight: shape=torch.Size([96])
  transformer2.blocks.3.norm2.bias: shape=torch.Size([96])
  transformer3.blocks.0.attn.proj_q.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer3.blocks.0.attn.proj_q.1.weight: shape=torch.Size([96])
  transformer3.blocks.0.attn.proj_q.1.bias: shape=torch.Size([96])
  transformer3.blocks.0.attn.proj_q.1.running_mean: shape=torch.Size([96])
  transformer3.blocks.0.attn.proj_q.1.running_var: shape=torch.Size([96])
  transformer3.blocks.0.attn.proj_q.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.0.attn.proj_k.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer3.blocks.0.attn.proj_k.1.weight: shape=torch.Size([96])
  transformer3.blocks.0.attn.proj_k.1.bias: shape=torch.Size([96])
  transformer3.blocks.0.attn.proj_k.1.running_mean: shape=torch.Size([96])
  transformer3.blocks.0.attn.proj_k.1.running_var: shape=torch.Size([96])
  transformer3.blocks.0.attn.proj_k.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.0.attn.proj_v.0.weight: shape=torch.Size([96, 96, 1, 1, 1])
  transformer3.blocks.0.proj.weight: shape=torch.Size([96, 96])
  transformer3.blocks.0.proj.bias: shape=torch.Size([96])
  transformer3.blocks.0.norm1.weight: shape=torch.Size([96])
  transformer3.blocks.0.norm1.bias: shape=torch.Size([96])
  transformer3.blocks.0.pwff.fc1.0.weight: shape=torch.Size([144, 96, 1, 1, 1])
  transformer3.blocks.0.pwff.fc1.1.weight: shape=torch.Size([144])
  transformer3.blocks.0.pwff.fc1.1.bias: shape=torch.Size([144])
  transformer3.blocks.0.pwff.fc1.1.running_mean: shape=torch.Size([144])
  transformer3.blocks.0.pwff.fc1.1.running_var: shape=torch.Size([144])
  transformer3.blocks.0.pwff.fc1.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.0.pwff.STConv.0.weight: shape=torch.Size([144, 1, 3, 3, 3])
  transformer3.blocks.0.pwff.STConv.1.weight: shape=torch.Size([144])
  transformer3.blocks.0.pwff.STConv.1.bias: shape=torch.Size([144])
  transformer3.blocks.0.pwff.STConv.1.running_mean: shape=torch.Size([144])
  transformer3.blocks.0.pwff.STConv.1.running_var: shape=torch.Size([144])
  transformer3.blocks.0.pwff.STConv.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.0.pwff.fc2.0.weight: shape=torch.Size([96, 144, 1, 1, 1])
  transformer3.blocks.0.pwff.fc2.1.weight: shape=torch.Size([96])
  transformer3.blocks.0.pwff.fc2.1.bias: shape=torch.Size([96])
  transformer3.blocks.0.pwff.fc2.1.running_mean: shape=torch.Size([96])
  transformer3.blocks.0.pwff.fc2.1.running_var: shape=torch.Size([96])
  transformer3.blocks.0.pwff.fc2.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.0.norm2.weight: shape=torch.Size([96])
  transformer3.blocks.0.norm2.bias: shape=torch.Size([96])
  transformer3.blocks.1.attn.proj_q.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer3.blocks.1.attn.proj_q.1.weight: shape=torch.Size([96])
  transformer3.blocks.1.attn.proj_q.1.bias: shape=torch.Size([96])
  transformer3.blocks.1.attn.proj_q.1.running_mean: shape=torch.Size([96])
  transformer3.blocks.1.attn.proj_q.1.running_var: shape=torch.Size([96])
  transformer3.blocks.1.attn.proj_q.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.1.attn.proj_k.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer3.blocks.1.attn.proj_k.1.weight: shape=torch.Size([96])
  transformer3.blocks.1.attn.proj_k.1.bias: shape=torch.Size([96])
  transformer3.blocks.1.attn.proj_k.1.running_mean: shape=torch.Size([96])
  transformer3.blocks.1.attn.proj_k.1.running_var: shape=torch.Size([96])
  transformer3.blocks.1.attn.proj_k.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.1.attn.proj_v.0.weight: shape=torch.Size([96, 96, 1, 1, 1])
  transformer3.blocks.1.proj.weight: shape=torch.Size([96, 96])
  transformer3.blocks.1.proj.bias: shape=torch.Size([96])
  transformer3.blocks.1.norm1.weight: shape=torch.Size([96])
  transformer3.blocks.1.norm1.bias: shape=torch.Size([96])
  transformer3.blocks.1.pwff.fc1.0.weight: shape=torch.Size([144, 96, 1, 1, 1])
  transformer3.blocks.1.pwff.fc1.1.weight: shape=torch.Size([144])
  transformer3.blocks.1.pwff.fc1.1.bias: shape=torch.Size([144])
  transformer3.blocks.1.pwff.fc1.1.running_mean: shape=torch.Size([144])
  transformer3.blocks.1.pwff.fc1.1.running_var: shape=torch.Size([144])
  transformer3.blocks.1.pwff.fc1.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.1.pwff.STConv.0.weight: shape=torch.Size([144, 1, 3, 3, 3])
  transformer3.blocks.1.pwff.STConv.1.weight: shape=torch.Size([144])
  transformer3.blocks.1.pwff.STConv.1.bias: shape=torch.Size([144])
  transformer3.blocks.1.pwff.STConv.1.running_mean: shape=torch.Size([144])
  transformer3.blocks.1.pwff.STConv.1.running_var: shape=torch.Size([144])
  transformer3.blocks.1.pwff.STConv.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.1.pwff.fc2.0.weight: shape=torch.Size([96, 144, 1, 1, 1])
  transformer3.blocks.1.pwff.fc2.1.weight: shape=torch.Size([96])
  transformer3.blocks.1.pwff.fc2.1.bias: shape=torch.Size([96])
  transformer3.blocks.1.pwff.fc2.1.running_mean: shape=torch.Size([96])
  transformer3.blocks.1.pwff.fc2.1.running_var: shape=torch.Size([96])
  transformer3.blocks.1.pwff.fc2.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.1.norm2.weight: shape=torch.Size([96])
  transformer3.blocks.1.norm2.bias: shape=torch.Size([96])
  transformer3.blocks.2.attn.proj_q.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer3.blocks.2.attn.proj_q.1.weight: shape=torch.Size([96])
  transformer3.blocks.2.attn.proj_q.1.bias: shape=torch.Size([96])
  transformer3.blocks.2.attn.proj_q.1.running_mean: shape=torch.Size([96])
  transformer3.blocks.2.attn.proj_q.1.running_var: shape=torch.Size([96])
  transformer3.blocks.2.attn.proj_q.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.2.attn.proj_k.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer3.blocks.2.attn.proj_k.1.weight: shape=torch.Size([96])
  transformer3.blocks.2.attn.proj_k.1.bias: shape=torch.Size([96])
  transformer3.blocks.2.attn.proj_k.1.running_mean: shape=torch.Size([96])
  transformer3.blocks.2.attn.proj_k.1.running_var: shape=torch.Size([96])
  transformer3.blocks.2.attn.proj_k.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.2.attn.proj_v.0.weight: shape=torch.Size([96, 96, 1, 1, 1])
  transformer3.blocks.2.proj.weight: shape=torch.Size([96, 96])
  transformer3.blocks.2.proj.bias: shape=torch.Size([96])
  transformer3.blocks.2.norm1.weight: shape=torch.Size([96])
  transformer3.blocks.2.norm1.bias: shape=torch.Size([96])
  transformer3.blocks.2.pwff.fc1.0.weight: shape=torch.Size([144, 96, 1, 1, 1])
  transformer3.blocks.2.pwff.fc1.1.weight: shape=torch.Size([144])
  transformer3.blocks.2.pwff.fc1.1.bias: shape=torch.Size([144])
  transformer3.blocks.2.pwff.fc1.1.running_mean: shape=torch.Size([144])
  transformer3.blocks.2.pwff.fc1.1.running_var: shape=torch.Size([144])
  transformer3.blocks.2.pwff.fc1.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.2.pwff.STConv.0.weight: shape=torch.Size([144, 1, 3, 3, 3])
  transformer3.blocks.2.pwff.STConv.1.weight: shape=torch.Size([144])
  transformer3.blocks.2.pwff.STConv.1.bias: shape=torch.Size([144])
  transformer3.blocks.2.pwff.STConv.1.running_mean: shape=torch.Size([144])
  transformer3.blocks.2.pwff.STConv.1.running_var: shape=torch.Size([144])
  transformer3.blocks.2.pwff.STConv.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.2.pwff.fc2.0.weight: shape=torch.Size([96, 144, 1, 1, 1])
  transformer3.blocks.2.pwff.fc2.1.weight: shape=torch.Size([96])
  transformer3.blocks.2.pwff.fc2.1.bias: shape=torch.Size([96])
  transformer3.blocks.2.pwff.fc2.1.running_mean: shape=torch.Size([96])
  transformer3.blocks.2.pwff.fc2.1.running_var: shape=torch.Size([96])
  transformer3.blocks.2.pwff.fc2.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.2.norm2.weight: shape=torch.Size([96])
  transformer3.blocks.2.norm2.bias: shape=torch.Size([96])
  transformer3.blocks.3.attn.proj_q.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer3.blocks.3.attn.proj_q.1.weight: shape=torch.Size([96])
  transformer3.blocks.3.attn.proj_q.1.bias: shape=torch.Size([96])
  transformer3.blocks.3.attn.proj_q.1.running_mean: shape=torch.Size([96])
  transformer3.blocks.3.attn.proj_q.1.running_var: shape=torch.Size([96])
  transformer3.blocks.3.attn.proj_q.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.3.attn.proj_k.0.conv.weight: shape=torch.Size([96, 96, 3, 3, 3])
  transformer3.blocks.3.attn.proj_k.1.weight: shape=torch.Size([96])
  transformer3.blocks.3.attn.proj_k.1.bias: shape=torch.Size([96])
  transformer3.blocks.3.attn.proj_k.1.running_mean: shape=torch.Size([96])
  transformer3.blocks.3.attn.proj_k.1.running_var: shape=torch.Size([96])
  transformer3.blocks.3.attn.proj_k.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.3.attn.proj_v.0.weight: shape=torch.Size([96, 96, 1, 1, 1])
  transformer3.blocks.3.proj.weight: shape=torch.Size([96, 96])
  transformer3.blocks.3.proj.bias: shape=torch.Size([96])
  transformer3.blocks.3.norm1.weight: shape=torch.Size([96])
  transformer3.blocks.3.norm1.bias: shape=torch.Size([96])
  transformer3.blocks.3.pwff.fc1.0.weight: shape=torch.Size([144, 96, 1, 1, 1])
  transformer3.blocks.3.pwff.fc1.1.weight: shape=torch.Size([144])
  transformer3.blocks.3.pwff.fc1.1.bias: shape=torch.Size([144])
  transformer3.blocks.3.pwff.fc1.1.running_mean: shape=torch.Size([144])
  transformer3.blocks.3.pwff.fc1.1.running_var: shape=torch.Size([144])
  transformer3.blocks.3.pwff.fc1.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.3.pwff.STConv.0.weight: shape=torch.Size([144, 1, 3, 3, 3])
  transformer3.blocks.3.pwff.STConv.1.weight: shape=torch.Size([144])
  transformer3.blocks.3.pwff.STConv.1.bias: shape=torch.Size([144])
  transformer3.blocks.3.pwff.STConv.1.running_mean: shape=torch.Size([144])
  transformer3.blocks.3.pwff.STConv.1.running_var: shape=torch.Size([144])
  transformer3.blocks.3.pwff.STConv.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.3.pwff.fc2.0.weight: shape=torch.Size([96, 144, 1, 1, 1])
  transformer3.blocks.3.pwff.fc2.1.weight: shape=torch.Size([96])
  transformer3.blocks.3.pwff.fc2.1.bias: shape=torch.Size([96])
  transformer3.blocks.3.pwff.fc2.1.running_mean: shape=torch.Size([96])
  transformer3.blocks.3.pwff.fc2.1.running_var: shape=torch.Size([96])
  transformer3.blocks.3.pwff.fc2.1.num_batches_tracked: shape=torch.Size([])
  transformer3.blocks.3.norm2.weight: shape=torch.Size([96])
  transformer3.blocks.3.norm2.bias: shape=torch.Size([96])
  Stem0.0.weight: shape=torch.Size([24, 3, 1, 5, 5])
  Stem0.0.bias: shape=torch.Size([24])
  Stem0.1.weight: shape=torch.Size([24])
  Stem0.1.bias: shape=torch.Size([24])
  Stem0.1.running_mean: shape=torch.Size([24])
  Stem0.1.running_var: shape=torch.Size([24])
  Stem0.1.num_batches_tracked: shape=torch.Size([])
  Stem1.0.weight: shape=torch.Size([48, 24, 3, 3, 3])
  Stem1.0.bias: shape=torch.Size([48])
  Stem1.1.weight: shape=torch.Size([48])
  Stem1.1.bias: shape=torch.Size([48])
  Stem1.1.running_mean: shape=torch.Size([48])
  Stem1.1.running_var: shape=torch.Size([48])
  Stem1.1.num_batches_tracked: shape=torch.Size([])
  Stem2.0.weight: shape=torch.Size([96, 48, 3, 3, 3])
  Stem2.0.bias: shape=torch.Size([96])
  Stem2.1.weight: shape=torch.Size([96])
  Stem2.1.bias: shape=torch.Size([96])
  Stem2.1.running_mean: shape=torch.Size([96])
  Stem2.1.running_var: shape=torch.Size([96])
  Stem2.1.num_batches_tracked: shape=torch.Size([])
  upsample.1.weight: shape=torch.Size([96, 96, 3, 1, 1])
  upsample.1.bias: shape=torch.Size([96])
  upsample.2.weight: shape=torch.Size([96])
  upsample.2.bias: shape=torch.Size([96])
  upsample.2.running_mean: shape=torch.Size([96])
  upsample.2.running_var: shape=torch.Size([96])
  upsample.2.num_batches_tracked: shape=torch.Size([])
  upsample2.1.weight: shape=torch.Size([48, 96, 3, 1, 1])
  upsample2.1.bias: shape=torch.Size([48])
  upsample2.2.weight: shape=torch.Size([48])
  upsample2.2.bias: shape=torch.Size([48])
  upsample2.2.running_mean: shape=torch.Size([48])
  upsample2.2.running_var: shape=torch.Size([48])
  upsample2.2.num_batches_tracked: shape=torch.Size([])
  ConvBlockLast.weight: shape=torch.Size([1, 48, 1])
  ConvBlockLast.bias: shape=torch.Size([1])
(dmm_pytorch) PS C:\Users\LMAPA\Documents\GitHub\vision-black-tech\PhysFormer>

"""